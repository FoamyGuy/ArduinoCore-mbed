name: Compile Examples

on: 
  pull_request:
    paths:
      - ".github/workflows/compile-examples.yml"
      - "cores/**"
      - "libraries/**"
      - "variants/**"
      - "boards.txt"
      - "platform.txt"
  push:
    paths:
      - ".github/workflows/compile-examples.yml"
      - "cores/**"
      - "libraries/**"
      - "variants/**"
      - "boards.txt"
      - "platform.txt"

jobs:
  compile-examples:
    runs-on: ubuntu-latest

    env:
      # sketch paths to compile (recursive) compatible with all boards
      UNIVERSAL_SKETCH_PATHS: |
        - libraries/Scheduler
      SKETCHES_REPORTS_PATH: sketches-reports

    strategy:
      fail-fast: false

      matrix:
        board:
          - fqbn: arduino:mbed:nano33ble
          - fqbn: arduino:mbed:envie_m4
          - fqbn: arduino:mbed:envie_m7
          - fqbn: arduino:mbed:nanorp2040connect

        # compile only the examples compatible with each board
        include:
          - board:
              fqbn: arduino:mbed:nano33ble
            additional-sketch-paths: |
              - libraries/PDM
              - libraries/ThreadDebug
          - board:
              fqbn: arduino:mbed:envie_m4
            additional-sketch-paths: |
              - libraries/doom
              - libraries/KernelDebug
              - libraries/Portenta_SDCARD
              - libraries/Portenta_Video
              - libraries/RPC
          - board:
              fqbn: arduino:mbed:envie_m7
            additional-sketch-paths: |
              - libraries/PDM
              - libraries/doom
              - libraries/KernelDebug
              - libraries/Portenta_Camera/examples
              - libraries/Portenta_SDCARD
              - libraries/Portenta_System
              - libraries/Portenta_Video
              - libraries/RPC
              - libraries/ThreadDebug
              - libraries/USBHOST
              - libraries/WiFi
          - board:
              fqbn: arduino:mbed:nanorp2040connect
            additional-sketch-paths: |
              - libraries/PDM
              - ~/Arduino/libraries/WiFiNINA

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # The source files are in a subfolder of the ArduinoCore-API repository, so it's not possible to clone it directly to the final destination in the core
      - name: Checkout ArduinoCore-API
        uses: actions/checkout@v2
        with:
          repository: arduino/ArduinoCore-API
          path: ArduinoCore-API

      - name: Install ArduinoCore-API
        run: mv "$GITHUB_WORKSPACE/ArduinoCore-API/api" "$GITHUB_WORKSPACE/cores/arduino"   

      - name: Compile examples
        uses: arduino/compile-sketches@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fqbn: ${{ matrix.board.fqbn }}
          libraries: |
            - name: WiFiNINA
          platforms: |
            # Use Board Manager to install the latest release of Arduino mbed Boards to get the toolchain
            - name: "arduino:mbed"
            # Overwrite the Board Manager installation with the local platform
            - source-path: "./"
              name: "arduino:mbed"
          sketch-paths: |
            ${{ env.UNIVERSAL_SKETCH_PATHS }}
            ${{ matrix.additional-sketch-paths }}
          verbose: 'false'
          enable-deltas-report: true
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}

      - name: Save memory usage change report as artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.SKETCHES_REPORTS_PATH }}
          name: ${{ env.SKETCHES_REPORTS_PATH }}
